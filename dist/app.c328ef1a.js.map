{"version":3,"sources":["upload.js","app.js"],"names":["upload","selector","options","input","document","querySelector","preview","createElement","classList","add","open","textContent","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHandler","event","target","files","length","from","forEach","file","type","match","reader","FileReader","onload","ev","console","log","result","insertAdjacentHTML","readAsDataURL","addEventListener"],"mappings":";;ACAA;;AAEA,oBAAO,OAAP,EAAgB;AACZY,EAAAA,KAAK,EAAE,IADK;AAEZE,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFI,ADFT,CCEP,QDFgBd,MAAT,CAAgBC,QAAhB,EAAyC;AAAA,MAAfC,OAAe,uEAAL,EAAK;AAC5C,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuBJ,QAAvB,CAAd;AACA,MAAMK,OAAO,GAAGF,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAhB;AAEAD,EAAAA,OAAO,CAACE,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB;AAEA,MAAMC,IAAI,GAAGN,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAb;AACAG,EAAAA,IAAI,CAACF,SAAL,CAAeC,GAAf,CAAmB,KAAnB;AACAC,EAAAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;;AAEA,MAAIT,OAAO,CAACU,KAAZ,EAAmB;AACfT,IAAAA,KAAK,CAACU,YAAN,CAAmB,UAAnB,EAA+B,IAA/B;AACH;;AAED,MAAIX,OAAO,CAACY,MAAR,IAAkBC,KAAK,CAACC,OAAN,CAAcd,OAAO,CAACY,MAAtB,CAAtB,EAAqD;AACjDX,IAAAA,KAAK,CAACU,YAAN,CAAmB,QAAnB,EAA6BX,OAAO,CAACY,MAAR,CAAeG,IAAf,CAAoB,GAApB,CAA7B;AACH;;AAEDd,EAAAA,KAAK,CAACe,qBAAN,CAA4B,UAA5B,EAAwCZ,OAAxC;AACAH,EAAAA,KAAK,CAACe,qBAAN,CAA4B,UAA5B,EAAwCR,IAAxC;;AAEA,MAAMS,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMhB,KAAK,CAACiB,KAAN,EAAN;AAAA,GAArB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC3B,QAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAxB,EAAgC;AAC5B;AACH;;AAED,QAAMD,KAAK,GAAGT,KAAK,CAACW,IAAN,CAAWJ,KAAK,CAACC,MAAN,CAAaC,KAAxB,CAAd;AAEAA,IAAAA,KAAK,CAACG,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,UAAI,CAACA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,OAAhB,CAAL,EAA+B;AAC3B;AACH;;AAED,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAAAC,EAAE,EAAI;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAE,CAACX,MAAH,CAAUc,MAAtB;AACA/B,QAAAA,OAAO,CAACgC,kBAAR,CAA2B,YAA3B,oGAEoBJ,EAAE,CAACX,MAAH,CAAUc,MAF9B;AAKH,OAPD;;AASAN,MAAAA,MAAM,CAACQ,aAAP,CAAqBX,IAArB;AACH,KAjBD;AAkBH,GAzBD;;AA0BAlB,EAAAA,IAAI,CAAC8B,gBAAL,CAAsB,OAAtB,EAA+BrB,YAA/B;AACAhB,EAAAA,KAAK,CAACqC,gBAAN,CAAuB,QAAvB,EAAiCnB,aAAjC;AACH","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["export function upload(selector, options = { }) {\n    const input = document.querySelector(selector)\n    const preview = document.createElement('div')\n\n    preview.classList.add('preview')\n\n    const open = document.createElement(\"button\")\n    open.classList.add(\"btn\")\n    open.textContent = \"Open\"\n\n    if (options.multi) {\n        input.setAttribute('multiple', true)\n    }\n\n    if (options.accept && Array.isArray(options.accept)) {\n        input.setAttribute('accept', options.accept.join(','))\n    }\n\n    input.insertAdjacentElement(\"afterend\", preview)\n    input.insertAdjacentElement(\"afterend\", open)\n\n    const triggerInput = () => input.click()\n\n    const changeHandler = event => {\n        if (!event.target.files.length) {\n            return\n        }\n\n        const files = Array.from(event.target.files)\n\n        files.forEach(file => {\n            if (!file.type.match('image')) {\n                return\n            }\n\n            const reader = new FileReader()\n\n            reader.onload = ev => {\n                console.log(ev.target.result);\n                preview.insertAdjacentHTML('afterbegin', `\n                    <div class=\"preview-image\">\n                        <img src=\"${ev.target.result}\" alt=\"file.name\" />\n                    </div>\n                `)\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n    open.addEventListener('click', triggerInput)\n    input.addEventListener('change', changeHandler)\n}","import { upload } from \"./upload.js\"\n\nupload(\"#file\", {\n    multi: true,\n    accept: ['.png', '.jpg', '.gif']\n})"]}